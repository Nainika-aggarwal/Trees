/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    int height(TreeNode A)
    {
        if(A== null)
        return 0;
        int lheight = height(A.left);
        int rheight = height(A.right);
        if(lheight > rheight)
        return lheight+1;
        else
        return rheight+1;
    }
    public int isBalanced(TreeNode A) {
        Queue<TreeNode> s = new LinkedList<TreeNode>();
        s.add(A);
        while(!s.isEmpty())
        {
            TreeNode x = s.remove();
            int y = height(x.left);
            int z = height(x.right);
            if(Math.abs(y-z) > 1)
            return 0;
            if(x.left != null)
            s.add(x.left);
            if(x.right != null)
            {
                s.add(x.right);
            }
        }
        return 1;
    }
}
